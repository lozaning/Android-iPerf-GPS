// Generated by view binder compiler. Do not edit!
package com.example.androidproject.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.androidproject.R;
import com.google.android.material.appbar.AppBarLayout;
import com.google.android.material.button.MaterialButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityExportBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final AppBarLayout appBarLayout;

  @NonNull
  public final LinearLayout bottomButtonsLayout;

  @NonNull
  public final MaterialButton deleteButton;

  @NonNull
  public final MaterialButton exportButton;

  @NonNull
  public final MaterialButton selectAllButton;

  @NonNull
  public final RecyclerView sessionsRecyclerView;

  @NonNull
  public final Toolbar toolbar;

  private ActivityExportBinding(@NonNull ConstraintLayout rootView,
      @NonNull AppBarLayout appBarLayout, @NonNull LinearLayout bottomButtonsLayout,
      @NonNull MaterialButton deleteButton, @NonNull MaterialButton exportButton,
      @NonNull MaterialButton selectAllButton, @NonNull RecyclerView sessionsRecyclerView,
      @NonNull Toolbar toolbar) {
    this.rootView = rootView;
    this.appBarLayout = appBarLayout;
    this.bottomButtonsLayout = bottomButtonsLayout;
    this.deleteButton = deleteButton;
    this.exportButton = exportButton;
    this.selectAllButton = selectAllButton;
    this.sessionsRecyclerView = sessionsRecyclerView;
    this.toolbar = toolbar;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityExportBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityExportBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_export, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityExportBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.appBarLayout;
      AppBarLayout appBarLayout = ViewBindings.findChildViewById(rootView, id);
      if (appBarLayout == null) {
        break missingId;
      }

      id = R.id.bottomButtonsLayout;
      LinearLayout bottomButtonsLayout = ViewBindings.findChildViewById(rootView, id);
      if (bottomButtonsLayout == null) {
        break missingId;
      }

      id = R.id.deleteButton;
      MaterialButton deleteButton = ViewBindings.findChildViewById(rootView, id);
      if (deleteButton == null) {
        break missingId;
      }

      id = R.id.exportButton;
      MaterialButton exportButton = ViewBindings.findChildViewById(rootView, id);
      if (exportButton == null) {
        break missingId;
      }

      id = R.id.selectAllButton;
      MaterialButton selectAllButton = ViewBindings.findChildViewById(rootView, id);
      if (selectAllButton == null) {
        break missingId;
      }

      id = R.id.sessionsRecyclerView;
      RecyclerView sessionsRecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (sessionsRecyclerView == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      return new ActivityExportBinding((ConstraintLayout) rootView, appBarLayout,
          bottomButtonsLayout, deleteButton, exportButton, selectAllButton, sessionsRecyclerView,
          toolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
